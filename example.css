/* -----------------------------
 * Basic Stacking Context Examples
 * ----------------------------- */

/* Incorrect example - Error occurs: position + z-index without isolation: isolate */
.example-error {
  position: absolute;
  z-index: 10;
}

/* Correct example - Creating stacking context with isolation: isolate */
.example-correct {
  position: absolute;
  z-index: 10;
  isolation: isolate;
}

/* When using only z-index - No error as it doesn't create a stacking context */
.example-z-index-only {
  z-index: 10;
}

/* When using only position: absolute - No error as z-index is missing */
.example-absolute-only {
  position: absolute;
}

/* Example with only isolation: isolate - Creates a new stacking context without position or z-index */
.example-isolation-only {
  isolation: isolate;
}

/* Incorrect example with position: relative and z-index - Error occurs */
.example-relative-error {
  position: relative;
  z-index: 5;
}

/* Incorrect example with position: fixed and z-index - Error occurs */
.example-fixed-error {
  position: fixed;
  z-index: 100;
}

/* Incorrect example with position: sticky and z-index - Error occurs */
.example-sticky-error {
  position: sticky;
  z-index: 50;
}

/* When using z-index: auto - No error as it doesn't create a stacking context */
.example-z-index-auto {
  position: absolute;
  z-index: auto;
}

/* -----------------------------
 * Pseudo-elements and isolation
 * ----------------------------- */

/* Pseudo-element case - No error as pseudo-elements are not affected by isolation */
.element::before {
  position: absolute;
  z-index: 20;
}

/* Pseudo-element with isolation: isolate - Warning about redundancy occurs */
.element::after {
  position: fixed;
  z-index: 15;
  isolation: isolate; /* Meaningless for pseudo-elements */
}

/* Mixed normal selectors and pseudo-elements - Error occurs only for normal selectors */
.mixed-selector,
.mixed-selector::before {
  position: absolute;
  z-index: 30;
}

/* -----------------------------
 * Multiple declarations and Stacking Context
 * ----------------------------- */

/* Multiple z-index declarations - Error occurs for each non-auto declaration */
.multiple-z-index {
  position: relative;
  z-index: 1;
  color: red;
  z-index: 2;
}

/* Mixed z-index: auto and z-index: 5 - Error occurs only for z-index: 5 */
.mixed-z-index {
  position: relative;
  z-index: auto;
  margin: 10px;
  z-index: 5;
}

/* -----------------------------
 * Visual examples to verify Stacking Context behavior
 * ----------------------------- */

/* Parent element (without isolation: isolate) */
.parent-without-isolation {
  position: relative;
  width: 300px;
  height: 300px;
  background-color: #f0f0f0;
  border: 1px solid black;
}

/* Parent element (with isolation: isolate) */
.parent-with-isolation {
  position: relative;
  width: 300px;
  height: 300px;
  background-color: #f0f0f0;
  border: 1px solid black;
  isolation: isolate;
}

/* Child element 1 - Low z-index */
.child-1 {
  position: absolute;
  top: 50px;
  left: 50px;
  width: 100px;
  height: 100px;
  background-color: red;
  z-index: 1;
}

/* Child element 2 - High z-index */
.child-2 {
  position: absolute;
  top: 100px;
  left: 100px;
  width: 100px;
  height: 100px;
  background-color: blue;
  z-index: 2;
}

/* Grandchild element - Very high z-index */
.grandchild {
  position: absolute;
  top: 25px;
  left: 25px;
  width: 50px;
  height: 50px;
  background-color: green;
  z-index: 999; /* Very high value */
}

/* -----------------------------
 * Advanced Stacking Context Examples
 * ----------------------------- */

/* No error when opacity creates a stacking context (with ignoreWhenStackingContextExists option) */
.stacking-opacity {
  position: absolute;
  z-index: 10;
  opacity: 0.9; /* Creates a stacking context */
}

/* No error when transform creates a stacking context (with ignoreWhenStackingContextExists option) */
.stacking-transform {
  position: relative;
  z-index: 5;
  transform: translateZ(0); /* Creates a stacking context */
}

/* No error when filter creates a stacking context (with ignoreWhenStackingContextExists option) */
.stacking-filter {
  position: fixed;
  z-index: 100;
  filter: blur(5px); /* Creates a stacking context */
}

/* No error when will-change creates a stacking context (with ignoreWhenStackingContextExists option) */
.stacking-will-change {
  position: sticky;
  z-index: 50;
  will-change: transform; /* Creates a stacking context */
}

/* Class-based ignoring (with ignoreClasses option) */
.layout-component.no-isolation {
  position: absolute;
  z-index: 200;
  /* No error with proper configuration */
}

/* Stylelint disable comment example */
/* stylelint-disable-next-line isolate-on-stack/isolation-for-position-zindex */
.disabled-by-comment {
  position: relative;
  z-index: 300;
}

/* Redundant isolation with existing stacking context */
.redundant-isolation {
  position: absolute;
  z-index: 400;
  isolation: isolate; /* Redundant with ignoreWhenStackingContextExists option */
  opacity: 0.8; /* Already creates a stacking context */
}
